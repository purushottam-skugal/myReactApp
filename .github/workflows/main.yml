name: CI/CD

on:
  push:
    branches: develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          cd /home/runner/work/myReactApp/myReactApp
          npm install

      - name: Build
        run: |
          cd /home/runner/work/myReactApp/myReactApp
          npm run build:prod

  Deploy:
      needs: build
      runs-on: ubuntu-latest      
      
      steps:
        - uses: actions/checkout@v2
        - name: Debug Directory
          run: |
            pwd
            ls -l

        - name: Configure SSH
          uses: appleboy/ssh-action@v0.1.7
          with:
            key: ${{ secrets.EC2_PRIVATE_KEY }}
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USERNAME }}
            port: ${{ secrets.EC2_PORT }}
            script: |
              pwd
              cd myReactApp
              git pull origin develop
              npm install --legacy-peer-deps
              npm run







           


  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Copy Private Key
  #       run: echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/script-tv-access-key.pem

  #     - name: Set Up SSH
  #       run: |
  #         chmod 400 /tmp/script-tv-access-key.pem
  #         mkdir -p ~/.ssh
  #         touch ~/.ssh/known_hosts
  #         ssh-keyscan -H -v ec2-13-127-139-208.ap-south-1.compute.amazonaws.com >> ~/.ssh/known_hosts
  #         echo -e "Host ec2-13-127-139-208.ap-south-1.compute.amazonaws.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/known_hosts

  #     - name: Test SSH Connection
  #       run: ssh -v -i /tmp/script-tv-access-key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo Hello"

  #     - name: Pull Repository on EC2
  #       run: |
  #         git config --global user.email "purushottam@skugal.com"
  #         git config --global user.name "purushottam-skugal"

  #     - name: Debugging Information
  #       run: |
  #         ls -al  # List all files and directories in the current location
  #          pwd      

  #     - name: Print Current Directory
  #       run: pwd

  #     - name: Change to Project Directory
  #       run: cd /home/runner/work/myAngularApp/myAngularApp

  #     # - name: List Project Directory Contents
  #     #   run: ls -al myReactApp

  #     # - name: Verify Git Repository
  #     #   run: git status

  #     - name: Initialize Git Repository
  #       run: git init

  #     - name: Verify Git Repository (Submodule)
  #       run: git submodule status

  #     - name: Ensure the remote repository is set
  #       run: |
  #         git remote -v
  #         git remote add origin https://github.com/purushottam-skugal/myAngularApp.git
  #         git remote set-url origin https://github.com/purushottam-skugal/myAngularApp.git

  #     - name: Fetch the latest changes
  #       run: git fetch origin develop

  #     - name: Reset the local branch to match the remote branch
  #       run: git reset --hard origin/develop

  #     - name: Install Dependencies and Build
  #       run: |
  #         cd /home/runner/work/myAngularApp/myAngularApp
  #         npm install
  #         npm run build:prod

  #     - name: Start Angular Project
  #       run: |
  #         cd /home/runner/work/myAngularApp/myAngularApp
  #         npm start




          # https://github.com/purushottam-skugal/https://github.com/purushottam-skugal/myReactApp.git